/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  UUPSProxy,
  UUPSProxyInterface,
} from "../../../../../@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxy";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a4806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d9190610258565b61007e565b005b61006c61016f565b61007c610077610171565b610180565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e4906102e2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010d6101a6565b73ffffffffffffffffffffffffffffffffffffffff1614610163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015a9061034e565b60405180910390fd5b61016c816101cf565b50565b565b600061017b6101a6565b905090565b3660008037600080366000845af43d6000803e80600081146101a1573d6000f35b3d6000fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610225826101fa565b9050919050565b6102358161021a565b811461024057600080fd5b50565b6000813590506102528161022c565b92915050565b60006020828403121561026e5761026d6101f5565b5b600061027c84828501610243565b91505092915050565b600082825260208201905092915050565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b60006102cc601783610285565b91506102d782610296565b602082019050919050565b600060208201905081810360008301526102fb816102bf565b9050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b6000610338601e83610285565b915061034382610302565b602082019050919050565b600060208201905081810360008301526103678161032b565b905091905056fea2646970667358221220a85fb8389729899c2760617cacb4f6fade991c49409db509c213507276c261a064736f6c63430008100033";

type UUPSProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSProxy__factory extends ContractFactory {
  constructor(...args: UUPSProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UUPSProxy> {
    return super.deploy(overrides || {}) as Promise<UUPSProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UUPSProxy {
    return super.attach(address) as UUPSProxy;
  }
  override connect(signer: Signer): UUPSProxy__factory {
    return super.connect(signer) as UUPSProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSProxyInterface {
    return new utils.Interface(_abi) as UUPSProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSProxy {
    return new Contract(address, _abi, signerOrProvider) as UUPSProxy;
  }
}
