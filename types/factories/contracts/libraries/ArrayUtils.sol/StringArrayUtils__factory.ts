/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StringArrayUtils,
  StringArrayUtilsInterface,
} from "../../../../contracts/libraries/ArrayUtils.sol/StringArrayUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "array",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61041e610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063ea7d179d1461003a575b600080fd5b610054600480360381019061004f919061030b565b61006a565b604051610061919061039e565b60405180910390f35b600080600090505b83518110156100bf57828051906020012084828060010193508151811061009c5761009b6103b9565b5b602002602001015180519060200120036100ba5760019150506100c5565b610072565b50600090505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61012d826100e4565b810181811067ffffffffffffffff8211171561014c5761014b6100f5565b5b80604052505050565b600061015f6100cb565b905061016b8282610124565b919050565b600067ffffffffffffffff82111561018b5761018a6100f5565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156101c1576101c06100f5565b5b6101ca826100e4565b9050602081019050919050565b82818337600083830152505050565b60006101f96101f4846101a6565b610155565b905082815260208101848484011115610215576102146101a1565b5b6102208482856101d7565b509392505050565b600082601f83011261023d5761023c6100df565b5b813561024d8482602086016101e6565b91505092915050565b600061026961026484610170565b610155565b9050808382526020820190506020840283018581111561028c5761028b61019c565b5b835b818110156102d357803567ffffffffffffffff8111156102b1576102b06100df565b5b8086016102be8982610228565b8552602085019450505060208101905061028e565b5050509392505050565b600082601f8301126102f2576102f16100df565b5b8135610302848260208601610256565b91505092915050565b60008060408385031215610322576103216100d5565b5b600083013567ffffffffffffffff8111156103405761033f6100da565b5b61034c858286016102dd565b925050602083013567ffffffffffffffff81111561036d5761036c6100da565b5b61037985828601610228565b9150509250929050565b60008115159050919050565b61039881610383565b82525050565b60006020820190506103b3600083018461038f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220cecf6b8a47a3a614861a5eb16ce229d8f4b451a05ee8979c96e8aceeeba05c9064736f6c63430008110033";

type StringArrayUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StringArrayUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StringArrayUtils__factory extends ContractFactory {
  constructor(...args: StringArrayUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StringArrayUtils> {
    return super.deploy(overrides || {}) as Promise<StringArrayUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StringArrayUtils {
    return super.attach(address) as StringArrayUtils;
  }
  override connect(signer: Signer): StringArrayUtils__factory {
    return super.connect(signer) as StringArrayUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringArrayUtilsInterface {
    return new utils.Interface(_abi) as StringArrayUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringArrayUtils {
    return new Contract(address, _abi, signerOrProvider) as StringArrayUtils;
  }
}
