/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AddressArrayUtils,
  AddressArrayUtilsInterface,
} from "../../../../contracts/libraries/ArrayUtils.sol/AddressArrayUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "arr",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6104ad610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80633da80d66146100455780639fce5c8e14610075575b600080fd5b61005f600480360381019061005a9190610374565b6100a6565b60405161006c91906103eb565b60405180910390f35b61008f600480360381019061008a9190610374565b610125565b60405161009d92919061041f565b60405180910390f35b600080600090505b8351811015610119578273ffffffffffffffffffffffffffffffffffffffff168482806001019350815181106100e7576100e6610448565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361011457600191505061011f565b6100ae565b50600090505b92915050565b60008060005b8451811015610199578373ffffffffffffffffffffffffffffffffffffffff1685828060010193508151811061016457610163610448565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036101945760018192509250506101a2565b61012b565b50600080915091505b9250929050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61020b826101c2565b810181811067ffffffffffffffff8211171561022a576102296101d3565b5b80604052505050565b600061023d6101a9565b90506102498282610202565b919050565b600067ffffffffffffffff821115610269576102686101d3565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102aa8261027f565b9050919050565b6102ba8161029f565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b60006102f06102eb8461024e565b610233565b905080838252602082019050602084028301858111156103135761031261027a565b5b835b8181101561033c578061032888826102c8565b845260208401935050602081019050610315565b5050509392505050565b600082601f83011261035b5761035a6101bd565b5b813561036b8482602086016102dd565b91505092915050565b6000806040838503121561038b5761038a6101b3565b5b600083013567ffffffffffffffff8111156103a9576103a86101b8565b5b6103b585828601610346565b92505060206103c6858286016102c8565b9150509250929050565b60008115159050919050565b6103e5816103d0565b82525050565b600060208201905061040060008301846103dc565b92915050565b6000819050919050565b61041981610406565b82525050565b600060408201905061043460008301856103dc565b6104416020830184610410565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207f326ff06cf430191b5ed5bdba8916f79e022f756e5489890f804a2f0f2d573d64736f6c63430008110033";

type AddressArrayUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressArrayUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressArrayUtils__factory extends ContractFactory {
  constructor(...args: AddressArrayUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressArrayUtils> {
    return super.deploy(overrides || {}) as Promise<AddressArrayUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressArrayUtils {
    return super.attach(address) as AddressArrayUtils;
  }
  override connect(signer: Signer): AddressArrayUtils__factory {
    return super.connect(signer) as AddressArrayUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressArrayUtilsInterface {
    return new utils.Interface(_abi) as AddressArrayUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressArrayUtils {
    return new Contract(address, _abi, signerOrProvider) as AddressArrayUtils;
  }
}
