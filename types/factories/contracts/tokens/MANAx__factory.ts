/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MANAx, MANAxInterface } from "../../../contracts/tokens/MANAx";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b610100565b600033905090565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e368061010f6000396000f3fe60806040526004361061004e5760003560e01c80634a0687ef14610067578063715018a6146100905780638da5cb5b146100a7578063a6a05598146100d2578063f2fde38b146100fb5761005d565b3661005d5761005b610124565b005b610065610124565b005b34801561007357600080fd5b5061008e600480360381019061008991906106ba565b61013e565b005b34801561009c57600080fd5b506100a561022f565b005b3480156100b357600080fd5b506100bc610243565b6040516100c991906106f6565b60405180910390f35b3480156100de57600080fd5b506100f960048036038101906100f4919061092e565b61026d565b005b34801561010757600080fd5b50610122600480360381019061011d91906106ba565b61029c565b005b61012c61031f565b61013c610137610321565b610330565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a490610a6c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166101cd610356565b73ffffffffffffffffffffffffffffffffffffffff1614610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a90610ad8565b60405180910390fd5b61022c8161037f565b50565b6102376103a5565b6102416000610423565b565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102756103a5565b6102808686866104e9565b61028b8284836105cc565b61029482610423565b505050505050565b6102a46103a5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a90610b6a565b60405180910390fd5b61031c81610423565b50565b565b600061032b610356565b905090565b3660008037600080366000845af43d6000803e8060008114610351573d6000f35b3d6000fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b6103ad610640565b73ffffffffffffffffffffffffffffffffffffffff166103cb610243565b73ffffffffffffffffffffffffffffffffffffffff1614610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890610bd6565b60405180910390fd5b565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8273ffffffffffffffffffffffffffffffffffffffff1663d412d344306040518263ffffffff1660e01b815260040161052291906106f6565b600060405180830381600087803b15801561053c57600080fd5b505af1158015610550573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff166342fe09806000601285856040518563ffffffff1660e01b81526004016105959493929190610d0b565b600060405180830381600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff1663c68d42838484846040518463ffffffff1660e01b815260040161060993929190610dc2565b600060405180830381600087803b15801561062357600080fd5b505af1158015610637573d6000803e3d6000fd5b50505050505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106878261065c565b9050919050565b6106978161067c565b81146106a257600080fd5b50565b6000813590506106b48161068e565b92915050565b6000602082840312156106d0576106cf610652565b5b60006106de848285016106a5565b91505092915050565b6106f08161067c565b82525050565b600060208201905061070b60008301846106e7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107648261071b565b810181811067ffffffffffffffff821117156107835761078261072c565b5b80604052505050565b6000610796610648565b90506107a2828261075b565b919050565b600067ffffffffffffffff8211156107c2576107c161072c565b5b6107cb8261071b565b9050602081019050919050565b82818337600083830152505050565b60006107fa6107f5846107a7565b61078c565b90508281526020810184848401111561081657610815610716565b5b6108218482856107d8565b509392505050565b600082601f83011261083e5761083d610711565b5b813561084e8482602086016107e7565b91505092915050565b6000819050919050565b61086a81610857565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b600067ffffffffffffffff8211156108a8576108a761072c565b5b6108b18261071b565b9050602081019050919050565b60006108d16108cc8461088d565b61078c565b9050828152602081018484840111156108ed576108ec610716565b5b6108f88482856107d8565b509392505050565b600082601f83011261091557610914610711565b5b81356109258482602086016108be565b91505092915050565b60008060008060008060c0878903121561094b5761094a610652565b5b600061095989828a016106a5565b965050602087013567ffffffffffffffff81111561097a57610979610657565b5b61098689828a01610829565b955050604087013567ffffffffffffffff8111156109a7576109a6610657565b5b6109b389828a01610829565b94505060606109c489828a01610878565b93505060806109d589828a016106a5565b92505060a087013567ffffffffffffffff8111156109f6576109f5610657565b5b610a0289828a01610900565b9150509295509295509295565b600082825260208201905092915050565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6000610a56601783610a0f565b9150610a6182610a20565b602082019050919050565b60006020820190508181036000830152610a8581610a49565b9050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b6000610ac2601e83610a0f565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b54602683610a0f565b9150610b5f82610af8565b604082019050919050565b60006020820190508181036000830152610b8381610b47565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bc0602083610a0f565b9150610bcb82610b8a565b602082019050919050565b60006020820190508181036000830152610bef81610bb3565b9050919050565b6000819050919050565b6000610c1b610c16610c118461065c565b610bf6565b61065c565b9050919050565b6000610c2d82610c00565b9050919050565b6000610c3f82610c22565b9050919050565b610c4f81610c34565b82525050565b6000819050919050565b600060ff82169050919050565b6000610c87610c82610c7d84610c55565b610bf6565b610c5f565b9050919050565b610c9781610c6c565b82525050565b600081519050919050565b60005b83811015610cc6578082015181840152602081019050610cab565b60008484015250505050565b6000610cdd82610c9d565b610ce78185610a0f565b9350610cf7818560208601610ca8565b610d008161071b565b840191505092915050565b6000608082019050610d206000830187610c46565b610d2d6020830186610c8e565b8181036040830152610d3f8185610cd2565b90508181036060830152610d538184610cd2565b905095945050505050565b610d6781610857565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610d9482610d6d565b610d9e8185610d78565b9350610dae818560208601610ca8565b610db78161071b565b840191505092915050565b6000606082019050610dd760008301866106e7565b610de46020830185610d5e565b8181036040830152610df68184610d89565b905094935050505056fea2646970667358221220b17d92955e1f04df7fbe2c8c8b190c832b878b51a7d66d33a288377bea28147164736f6c63430008100033";

type MANAxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MANAxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MANAx__factory extends ContractFactory {
  constructor(...args: MANAxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MANAx> {
    return super.deploy(overrides || {}) as Promise<MANAx>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MANAx {
    return super.attach(address) as MANAx;
  }
  override connect(signer: Signer): MANAx__factory {
    return super.connect(signer) as MANAx__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MANAxInterface {
    return new utils.Interface(_abi) as MANAxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MANAx {
    return new Contract(address, _abi, signerOrProvider) as MANAx;
  }
}
